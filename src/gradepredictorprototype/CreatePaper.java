/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gradepredictorprototype;

import javax.swing.ImageIcon;

/**
 *
 * @author kingt
 */
public class CreatePaper extends javax.swing.JFrame {

    private Paper paper;
    private int index; //creates variables
    private int[] topics;
    private ImageIcon question = null;
    private int maxQuestion;

    /**
     * Creates new form CreatePaper
     */
    public CreatePaper(Paper paper) {
        index = 0;
        this.paper = paper; //initialises variables
        topics = new int[paper.numOfQuestions()];
        maxQuestion = 1;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        leftBtn = new javax.swing.JButton();
        questionNumLbl = new javax.swing.JLabel();
        rightBtn = new javax.swing.JButton();
        maxMarkLbl = new javax.swing.JLabel();
        markFld = new javax.swing.JTextField();
        topicLbl = new javax.swing.JLabel();
        topicsBox = new javax.swing.JComboBox<>();
        questionIconLbl = new javax.swing.JLabel();
        subjectBtn = new javax.swing.JButton();
        profileBtn = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        questionBtn = new javax.swing.JButton();
        questionLbl = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        logout = new javax.swing.JMenu();
        exit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        titleLbl.setText("Create Paper");

        leftBtn.setText("<");
        leftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftBtnActionPerformed(evt);
            }
        });

        questionNumLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        questionNumLbl.setText("Question 1");

        rightBtn.setText(">");
        rightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightBtnActionPerformed(evt);
            }
        });

        maxMarkLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        maxMarkLbl.setText("Question max mark:");

        markFld.setText("Enter Mark");
        markFld.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                markFldFocusGained(evt);
            }
        });

        topicLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        topicLbl.setText("Question topic:");

        topicsBox.setModel(new javax.swing.DefaultComboBoxModel<>(DatabaseManipulation.getTopicsFromSubject(GradePredictorPrototype.getSubject()).stream().map(x -> x.getTopic()).toArray(String[]::new)));

        questionIconLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        subjectBtn.setText("Return to Subject");
        subjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectBtnActionPerformed(evt);
            }
        });

        profileBtn.setText("Return to Profile");
        profileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtnActionPerformed(evt);
            }
        });

        createBtn.setText("Create Paper");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        questionBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        questionBtn.setText("Paste Question");
        questionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionBtnActionPerformed(evt);
            }
        });

        questionLbl.setText("Question:");

        logout.setText("Log out");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        menuBar.add(logout);

        exit.setText("Exit");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        menuBar.add(exit);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(createBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(questionIconLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(questionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(topicLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(topicsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(questionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maxMarkLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(markFld, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(leftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(questionNumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionNumLbl)
                    .addComponent(rightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxMarkLbl)
                    .addComponent(markFld, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topicLbl)
                    .addComponent(topicsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(questionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(subjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(questionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(questionIconLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectBtnActionPerformed

        new TeacherSubject().setVisible(true); //returns to the subject form
        this.dispose();
    }//GEN-LAST:event_subjectBtnActionPerformed

    private void profileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtnActionPerformed

        new TeacherProfile().setVisible(true); //returns to profile form
        this.dispose();
    }//GEN-LAST:event_profileBtnActionPerformed

    private void rightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightBtnActionPerformed
        if (ValidationRoutines.presenceCheck(markFld.getText()) && topicsBox.getSelectedItem() != null) {
            if (ValidationRoutines.isInt(markFld.getText()) && question != null) { // validates input 
                if (index < paper.numOfQuestions() - 1 && Integer.parseInt(markFld.getText()) > 0) { //makes sure you cannot go past then number of questions that exists
                    paper.addQuestion(index, new Question(Integer.parseInt(markFld.getText()), question, topicsBox.getSelectedItem().toString())); //adds the question to the paper
                    topics[index] = topicsBox.getSelectedIndex(); //stores the topic locally
                    index += 1; //increments the index
                    questionNumLbl.setText("Question " + (index + 1));//updates labels
                    markFld.setText(String.valueOf(paper.getQuestion(index).getMark()));
                    questionIconLbl.setIcon(paper.getQuestion(index).getQuestion());
                    question = paper.getQuestion(index).getQuestion();//gets the new question
                    topicsBox.setSelectedIndex(topics[index]);//updates topics box
                    if (index + 1 > maxQuestion) {
                        maxQuestion = index + 1;
                    }
                }
            } else {
                markFld.setText("Please enter a number or question"); //if validation routine fails, gives an error message
            }
        }
    }//GEN-LAST:event_rightBtnActionPerformed

    private void leftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftBtnActionPerformed
        if (ValidationRoutines.presenceCheck(markFld.getText()) && topicsBox.getSelectedItem() != null) {
            if (ValidationRoutines.isInt(markFld.getText()) && question != null) {//validates input
                if (index > 0 && Integer.parseInt(markFld.getText()) > 0) {//does not allow index to be negative
                    paper.addQuestion(index, new Question(Integer.parseInt(markFld.getText()), question, topicsBox.getSelectedItem().toString()));//adds the question to the paper
                    topics[index] = topicsBox.getSelectedIndex(); //stores topic locally
                    index -= 1;//increments the index
                    questionNumLbl.setText("Question " + (index + 1));//updates labels
                    markFld.setText(String.valueOf(paper.getQuestion(index).getMark()));
                    questionIconLbl.setIcon(paper.getQuestion(index).getQuestion());
                    question = paper.getQuestion(index).getQuestion();//gets the new question
                    topicsBox.setSelectedIndex(topics[index]);//updates topic box
                }
            } else {
                markFld.setText("Please enter a number or question");//if validation routine fails, gives an error message
            }
        }
    }//GEN-LAST:event_leftBtnActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        if (ValidationRoutines.presenceCheck(markFld.getText()) && topicsBox.getSelectedItem() != null) {
            if (ValidationRoutines.isInt(markFld.getText()) && question != null) {
                if (maxQuestion == paper.numOfQuestions() && paper.getMax() + Integer.parseInt(markFld.getText()) > paper.getBoundaries()[0] && Integer.parseInt(markFld.getText()) > 0) {
                    paper.addQuestion(index, new Question(Integer.parseInt(markFld.getText()), question, topicsBox.getSelectedItem().toString())); //saves current question
                    DatabaseManipulation.createPaper(paper, GradePredictorPrototype.getSubject());//creates the paper
                    new TeacherSubject().setVisible(true);//returns to subject form
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_createBtnActionPerformed

    private void markFldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_markFldFocusGained

        markFld.selectAll();//automatically selects all text when clicked
    }//GEN-LAST:event_markFldFocusGained

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        new Login().setVisible(true); //returns to login form
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        System.exit(0); //closes application
    }//GEN-LAST:event_exitMouseClicked

    private void questionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionBtnActionPerformed
        ImageIcon temp = GradePredictorPrototype.getImageFromClipboard();//gets question from clipboard        
        if (temp != null) {
            question = temp;
            questionIconLbl.setIcon(question);//updates label
        }

    }//GEN-LAST:event_questionBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreatePaper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreatePaper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreatePaper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreatePaper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createBtn;
    private javax.swing.JMenu exit;
    private javax.swing.JButton leftBtn;
    private javax.swing.JMenu logout;
    private javax.swing.JTextField markFld;
    private javax.swing.JLabel maxMarkLbl;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton profileBtn;
    private javax.swing.JButton questionBtn;
    private javax.swing.JLabel questionIconLbl;
    private javax.swing.JLabel questionLbl;
    private javax.swing.JLabel questionNumLbl;
    private javax.swing.JButton rightBtn;
    private javax.swing.JButton subjectBtn;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JLabel topicLbl;
    private javax.swing.JComboBox<String> topicsBox;
    // End of variables declaration//GEN-END:variables
}
